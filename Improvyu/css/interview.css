/* --- Base, Fonts, and Particles --- */
body {
    background-color: #0c0a18;
    color: #e0e0e0;
    font-family: 'Inter', sans-serif;
    overflow-x: hidden;
}

.font-orbitron {
    font-family: 'Orbitron', sans-serif;
}

@font-face {
    font-family: "Mona Sans";
    src: url("https://assets.codepen.io/64/Mona-Sans.woff2") format("woff2 supports variations"),
         url("https://assets.codepen.io/64/Mona-Sans.woff2") format("woff2-variations");
    font-weight: 100 1000;
}

.floating-particles::before {
    content: '';
    position: fixed; top: 0; left: 0;
    width: 100%; height: 100%; z-index: -1;
    background-image: radial-gradient(circle, rgba(255,255,255,0.05) 1px, transparent 1px);
    background-size: 2rem 2rem;
}

/* --- Rainbow Text Effect --- */
.rainbow-text {
    background: linear-gradient(90deg, #ff00de, #4158d0, #00d5ff, #3bff58, #ffeb3b, #ff8c00, #ff00de);
    -webkit-background-clip: text; background-clip: text;
    -webkit-text-fill-color: transparent;
    background-size: 300% auto;
    animation: rainbow-animation 6s linear infinite;
}
@keyframes rainbow-animation { to { background-position: 300% center; } }

/* --- Glass Card & Video --- */
.glass-card {
    background: rgba(18, 16, 38, 0.4);
    backdrop-filter: blur(12px); -webkit-backdrop-filter: blur(12px);
    border-radius: 20px;
    border: 1px solid rgba(255, 255, 255, 0.1);
    box-shadow: 0 8px 32px 0 rgba(0, 0, 0, 0.2);
}
#video { transform: scaleX(-1); }

/* --- Loaders & Status --- */
.loader {
    border: 5px solid #2c2c44;
    border-top: 5px solid #8a2be2;
    border-radius: 50%;
    width: 50px; height: 50px;
    animation: spin 1s linear infinite;
}
@keyframes spin { 0% { transform: rotate(0deg); } 100% { transform: rotate(360deg); } }

.status-dot {
    width: 12px; height: 12px; border-radius: 50%;
    transition: background-color 0.3s ease, box-shadow 0.3s ease;
}
.status-idle { background-color: #6b7280; }
.status-listening { background-color: #ef4444; box-shadow: 0 0 8px #ef4444; } /* Red */
.status-processing { background-color: #f59e0b; box-shadow: 0 0 8px #f59e0b; } /* Amber */
.status-speaking { background-color: #22c55e; box-shadow: 0 0 8px #22c55e; } /* Green */

.error-message {
    color: #f87171;
    background-color: rgba(239, 68, 68, 0.1);
    border: 1px solid rgba(239, 68, 68, 0.3);
    padding: 1rem; border-radius: 8px;
}

/* --- Animated Interview Button --- */
@layer properties {
    @property --bg-position { syntax: "<number>"; inherits: true; initial-value: 100; }
    @property --after-blur { syntax: "<number>"; inherits: true; initial-value: 0; }
    @property --after-opacity { syntax: "<number>"; inherits: true; initial-value: 1; }
    @property --before-opacity { syntax: "<number>"; inherits: true; initial-value: 0.3; }
    @property --btn-scale { syntax: "<number>"; inherits: true; initial-value: 1; }
}
:root {
    --btn-bg: hsl(0, 0%, 0%); --btn-border-width: 1.5;
    --after-bg: linear-gradient(to right, rgb(0 0 0), rgb(0 0 0));
    --after-blur: 10; --after-opacity: 1; --after-pos-y: 10;
    --before-opacity: 0.3; --bg-position: 100;
    --color-white: hsl(0, 0%, 100%); --color-cyan: hsl(180, 100%, 50%);
    --color-blue: hsl(240, 100%, 50%); --color-purple: hsl(270, 100%, 50%);
    --color-pink: hsl(330, 40%, 70%); --color-red: hsl(0, 100%, 50%);
    --color-yellow: hsl(60, 100%, 50%); --color-lime: hsl(90, 100%, 75%);
}
button.interview-btn {
    all: unset; background: transparent; border-width: 0;
    font-family: "Mona Sans", sans-serif;
    transform: scale(var(--btn-scale, 1));
    transition: --bg-position 3s ease, --after-blur 0.3s ease, --before-opacity 0.3s ease, --btn-scale 0.2s cubic-bezier(.76,-0.25,.51,1.13);
}
button.interview-btn > div {
    display: block; padding: 0.8em 1.2em; background: var(--btn-bg);
    color: white; font-weight: bold; border-radius: 8px;
    font-size: 1rem; position: relative; cursor: pointer;
}
button.interview-btn > div > span {
    background: linear-gradient(to right, var(--color-white), var(--color-white), var(--color-cyan), var(--color-blue), var(--color-purple), var(--color-pink), var(--color-red), var(--color-yellow), var(--color-lime), var(--color-white), var(--color-white)) no-repeat calc(var(--bg-position) * 1%) 0% / 900%;
    -webkit-background-clip: text; -webkit-text-fill-color: transparent;
    letter-spacing: 0.15ch; font-weight: 600;
}
button.interview-btn > div:after, button.interview-btn > div:before {
    content: ""; display: block; position: absolute; left: 0; top: 0;
}
button.interview-btn > div:after {
    width: 100%; height: 100%;
    background: var(--after-bg) no-repeat calc(var(--bg-position) * 1%) 0% / 900%;
    transform: translateY(calc(var(--after-pos-y) * 1px));
    z-index: -2; filter: blur(calc(var(--after-blur) * 1px)); opacity: var(--after-opacity);
}
button.interview-btn > div:before {
    width: calc(100% + calc(var(--btn-border-width) * 2 * 1px));
    height: calc(100% + calc(var(--btn-border-width) * 2 * 1px));
    background: linear-gradient(to right, var(--color-white), var(--color-white), var(--color-cyan), var(--color-blue), var(--color-purple), var(--color-pink), var(--color-red), var(--color-yellow), var(--color-lime), var(--color-white), var(--color-white)) no-repeat calc(var(--bg-position) * 1%) 0% / 900%;
    border-radius: 9px; z-index: -1;
    top: calc(var(--btn-border-width) * -1px);
    left: calc(var(--btn-border-width) * -1px);
    opacity: var(--before-opacity);
}
button.interview-btn:hover:not(:disabled) {
    --btn-scale: 1.05; --bg-position: 0;
    --after-bg: linear-gradient(to right, var(--color-white), var(--color-white), var(--color-cyan), var(--color-blue), var(--color-purple), var(--color-pink), var(--color-red), var(--color-yellow), var(--color-lime), var(--color-white), var(--color-white));
    --after-blur: 30; --after-opacity: 0.3; --after-pos-y: 0; --before-opacity: 1;
}
button.interview-btn:active:not(:disabled) { --btn-scale: 0.98; --after-blur: 15; }
button.interview-btn:disabled > div { opacity: 0.5; cursor: not-allowed; filter: grayscale(80%); }

button.interview-btn.is-recording > div::before {
    background: linear-gradient(to right, var(--color-red), var(--color-pink), var(--color-red));
    background-size: 200% auto;
    animation: recording-border-scroll 1.5s infinite linear;
}
@keyframes recording-border-scroll { from { background-position: 100% 0; } to { background-position: -100% 0; } }